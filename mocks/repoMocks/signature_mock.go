// Code generated by MockGen. DO NOT EDIT.
// Source: ./../client/repositories/signature/signature.go

// Package repoMocks is a generated GoMock package.
package repoMocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/lidofinance/dc4bc/fsm/types"
)

// MockSignatureRepo is a mock of SignatureRepo interface.
type MockSignatureRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSignatureRepoMockRecorder
}

// MockSignatureRepoMockRecorder is the mock recorder for MockSignatureRepo.
type MockSignatureRepoMockRecorder struct {
	mock *MockSignatureRepo
}

// NewMockSignatureRepo creates a new mock instance.
func NewMockSignatureRepo(ctrl *gomock.Controller) *MockSignatureRepo {
	mock := &MockSignatureRepo{ctrl: ctrl}
	mock.recorder = &MockSignatureRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignatureRepo) EXPECT() *MockSignatureRepoMockRecorder {
	return m.recorder
}

// GetSignatureByID mocks base method.
func (m *MockSignatureRepo) GetSignatureByID(dkgID, signatureID string) ([]types.ReconstructedSignature, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignatureByID", dkgID, signatureID)
	ret0, _ := ret[0].([]types.ReconstructedSignature)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSignatureByID indicates an expected call of GetSignatureByID.
func (mr *MockSignatureRepoMockRecorder) GetSignatureByID(dkgID, signatureID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignatureByID", reflect.TypeOf((*MockSignatureRepo)(nil).GetSignatureByID), dkgID, signatureID)
}

// GetSignatures mocks base method.
func (m *MockSignatureRepo) GetSignatures(dkgID string) (map[string][]types.ReconstructedSignature, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignatures", dkgID)
	ret0, _ := ret[0].(map[string][]types.ReconstructedSignature)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSignatures indicates an expected call of GetSignatures.
func (mr *MockSignatureRepoMockRecorder) GetSignatures(dkgID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignatures", reflect.TypeOf((*MockSignatureRepo)(nil).GetSignatures), dkgID)
}

// SaveSignatures mocks base method.
func (m *MockSignatureRepo) SaveSignatures(signature []types.ReconstructedSignature) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveSignatures", signature)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveSignatures indicates an expected call of SaveSignatures.
func (mr *MockSignatureRepoMockRecorder) SaveSignatures(signature interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSignatures", reflect.TypeOf((*MockSignatureRepo)(nil).SaveSignatures), signature)
}
